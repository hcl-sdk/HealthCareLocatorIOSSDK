stages:
  - test
  - prepare-demo
  - build-demo
  - deploy-demo

prepare:install-pods:
  interruptible: true
  stage: prepare-demo
  tags:
    - ios
  except:
    - tags
  before_script:
    - cd ./Example/OneKeySDKDemo/
  script:
    - bundle install
    - bundle exec pod install
  cache:
    key:
      files:
        - Gemfile.lock
        - Podfile.lock
    paths:
      - Pods/
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_SLUG}_dependencies"
    expire_in: 1 hour
    paths:
      - ./Example/OneKeySDKDemo/Pods/
      # - Pods/

prepare:clean:
  interruptible: true
  stage: prepare-demo
  tags:
    - ios
  except:
    - tags
  before_script:
    - cd ./Example/OneKeySDKDemo/
  script:
    - rm -rf reports build ~/Library/Developer/Xcode/DerivedData/Spacetime*
    - xcodebuild clean -workspace OneKeySDKDemo.xcworkspace -scheme OneKeySDKDemo | xcpretty

test:
  interruptible: true
  stage: test
  tags:
    - ios
  except:
    - tags
  script:
    - pod install
    - xcodebuild test -workspace OneKeySDK.xcworkspace -scheme OneKeySDK -configuration Debug -derivedDataPath build -destination "platform=iOS Simulator,name=iPhone 11 Pro,OS=13.2.2" -enableCodeCoverage YES | xcpretty -s
  allow_failure: false
  artifacts:
    name: "OneKeySDK_tests"
    expire_in: 1 hour
    paths:
      - build/Logs/Test/*

build:mr:
  extends: .build
  interruptible: true
  tags:
    - ios
  only:
    - branches
  except:
    - develop
    - master
    - release
    - hotfixes
    - tags
  script:
    - xcodebuild build -workspace OneKeySDKDemo.xcworkspace -scheme OneKeySDKDemo -configuration Release -derivedDataPath build -allowProvisioningUpdates | xcpretty -s
  needs:
    - job: prepare:install-pods
      artifacts: true

## Dev app: Build and deploy
build:dev:
  extends: .build
  only:
    - develop
  script:
    - ls
    - xcodebuild archive -workspace OneKeySDKDemo.xcworkspace -scheme OneKeySDKDemo -configuration Release -archivePath build/OneKeySDKDemo.xcarchive -derivedDataPath build -allowProvisioningUpdates | xcpretty -s;
    - xcodebuild -exportArchive -archivePath "build/OneKeySDKDemo.xcarchive" -exportOptionsPlist exportInHouseOptions.plist -exportPath build -allowProvisioningUpdates | xcpretty -s;
    - ditto -c -k -rsrc build/OneKeySDKDemo.xcarchive/dSYMs build/OneKeySDKDemo-dSYM.zip
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_SLUG}_release-dev"
    expire_in: 30 days
    paths:
      - ./Example/OneKeySDKDemo/build/OneKeySDKDemo.ipa
      - ./Example/OneKeySDKDemo/build/OneKeySDKDemo-dSYM.zip
      - ./Example/OneKeySDKDemo/build/OneKeySDKDemo.xcarchive

deploy:dev:
  extends: .deploy
  only:
    - develop
  script:
    - ls
    - ls ./build
    - VERSION=$(/usr/libexec/PlistBuddy -c "Print :ApplicationProperties:CFBundleShortVersionString" "${PWD}/build/OneKeySDKDemo.xcarchive/Info.plist") bundle exec fastlane dev_deploy
  needs:
    - job: build:dev
      artifacts: true

## Templates
.build:
  interruptible: true
  stage: build-demo
  tags:
    - ios
  before_script:
    - cd ./Example/OneKeySDKDemo/
    - rm -rf container/*
    - /usr/bin/agvtool new-version -all $CI_PIPELINE_IID
  allow_failure: false
  needs:
    - job: prepare:install-pods
      artifacts: true

.deploy:
  stage: deploy-demo
  tags:
    - ios
  variables:
    BUILD_NUMBER: "${CI_PIPELINE_IID}"
  before_script:
    # Force to use SSH (for tags pushing)
    - git remote set-url origin git@gitlab.ekino.com:iqvia/OneKeySDK-iOS.git
    - git fetch --all --tags
    - cd ./Example/OneKeySDKDemo/
    - bundle install
    - bundle update fastlane
  allow_failure: false
